"""
Django settings for signals project.

Generated by 'django-admin startproject' using Django 4.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from django.middleware.security import SecurityMiddleware
import os
from dotenv import load_dotenv
import environ
from whitenoise.middleware import WhiteNoiseMiddleware


# Initialise environment variables
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.getenv('SECRET_KEY')
SECRET_KEY = 'django-insecure-q33i2=y#xo^%m)_il!vri*nns*cwc0kp62+sbdf0dmc)s5t2!f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False


ALLOWED_HOSTS = ["*"]

# Application definition
ROOT_URLCONF = 'signals.urls'

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'whitenoise.runserver_nostatic',
    'django.contrib.staticfiles',
    'django_plotly_dash.apps.DjangoPlotlyDashConfig',
    'bitacora',
    'csp'
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',

    'django_plotly_dash.middleware.BaseMiddleware',
    'django_plotly_dash.middleware.ExternalRedirectionMiddleware',

    # 'bitacora.middleware.XFrameOptionsMiddleware',
    # 'bitacora.middleware.IframeOnlyMiddleware',
    'csp.middleware.CSPMiddleware'
]


# Solo agregar el middleware en producción
if not DEBUG:
    MIDDLEWARE.append('bitacora.middleware.IframeOnlyMiddleware')

#CSP_FRAME_ANCESTORS = ["'self'", "https://www.ttrading.co"]


CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = (
    "'self'",
    "'unsafe-inline'",
    "'unsafe-eval'",
    "https://cdn.jsdelivr.net",
    "https://kit.fontawesome.com",
    "https://unpkg.com",
    "https://ka-f.fontawesome.com",
    "https://www.ttrading.co"
)
CSP_STYLE_SRC = (
    "'self'",
    "'unsafe-inline'",
    "https://cdn.jsdelivr.net",
    "https://kit.fontawesome.com",
    "https://unpkg.com",
    "https://ka-f.fontawesome.com",
    "https://www.ttrading.co"
)
CSP_IMG_SRC = (
    "'self'",
    "data:",
    "https://www.ttrading.co"
)
CSP_FRAME_SRC = (
    "'self'",
    "https://www.ttrading.co",
    "https://www.ttrading.co/miembros-basico",
    "https://www.ttrading.co/miembro-platinum"
)


ROOT_URLCONF = 'signals.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'signals.wsgi.application'

# Configuraciones para las sesiones
SESSION_COOKIE_AGE = 10 * 60  # 10 minutos
# Actualizar sesión en cada petición del usuario
SESSION_SAVE_EVERY_REQUEST = True


# DATABASES = {
# "default": {
# "ENGINE": "django.db.backends.postgresql_psycopg2",
# "NAME": os.getenv('DATABASE_NAME_PRO'),
# "USER": os.getenv('DATABASE_USER_PRO'),
# "PASSWORD": os.getenv('DATABASE_PASS_PRO'),
# "HOST": os.getenv('HOST_PRO'),
# "PORT": "5432",
# }
# }


DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql_psycopg2",
        "NAME": "ttrading",
        "USER": "ttrading",
        "PASSWORD": "Alej@ndr0",
        "HOST": "160.238.36.130",
        "PORT": "5432",
    }
}

DIR_CACHE = BASE_DIR / 'cache'
DIR_SESSIONS = BASE_DIR / 'sessions'

CACHES = {

    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': DIR_CACHE,
        'TIMEOUT': 60*60*9,
        'OPTIONS': {
            'MAX_ENTRIES': 1000,
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/


STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "bitacora/static"]
STATIC_ROOT = BASE_DIR / "static"
# STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
